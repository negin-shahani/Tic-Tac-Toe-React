{"version":3,"sources":["components/square.js","components/board.js","components/sort.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","Button","className","this","props","isWinner","onClick","value","Component","Board","i","iswinner","squares","rows","col","j","index","Array","isArray","line","includes","push","renderSquare","Grid","container","item","xs","createBoard","SortIcon","viewBox","fill","d","Sort","position","calculateMovePosition","Math","floor","calculateWinner","lines","length","a","b","c","winner","Copyright","Typography","variant","color","Date","getFullYear","Link","href","fontSize","Game","state","history","lastMove","stepNumber","xIsNext","sortDesc","showError","slice","winnerDeclared","Boolean","squareFilled","setState","concat","step","next","pos","Alert","severity","action","IconButton","aria-label","size","hideShowError","AlertTitle","status","current","Draw","filter","x","moves","map","moveArray","moveindex","lable","colRowInfo","jumpTo","reverse","align","style","marginTop","backgroundColor","endIcon","restart","id","type","htmlFor","handleClick","handleClickOnSorting","DescriptionAlerts","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.971de0c4.chunk.js","sourcesContent":["import React,{ Component} from 'react'\r\nimport './components.css'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Square extends Component {\r\n    render() { \r\n        return (\r\n            <Button className={\"square\" + (this.props.isWinner ? \" winner\" : \"\")}\r\n                onClick={this.props.onClick}>\r\n                {this.props.value} \r\n            </Button>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Square;","import React, { Component, useState } from 'react'\r\nimport Square from './square'\r\nimport './components.css'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass Board extends Component {\r\n\r\n    renderSquare(i, iswinner) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                key={\"square-\" + i}\r\n                onClick={() => this.props.onClick(i)}\r\n                isWinner={iswinner}\r\n            />\r\n        );\r\n    }\r\n\r\n    createBoard() {\r\n        let rows = [];\r\n\r\n        for (let i = 1; i < 4; i++) {\r\n            let col = [];\r\n\r\n            for (let j = 1; j < 4; j++) {\r\n                const index = i * 3 + j - 4;\r\n                let isWinner = false;\r\n\r\n                if (Array.isArray(this.props.line) && this.props.line.includes(index)) {\r\n                    isWinner = true;\r\n                }\r\n                col.push(this.renderSquare(index, isWinner));\r\n            }\r\n            rows.push(\r\n                <div key={\"row-\" + i} className=\"board-row\">\r\n                    {col}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return rows;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.className} >\r\n                <Grid container>\r\n                    <Grid item xs={12} >\r\n                        {this.createBoard()}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default Board;","import React, { Component } from 'react'\r\nimport './components.css'\r\n\r\nclass Sort extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                className={\"sort-button\" + (this.props.position ? \" desc\" : \"\")}\r\n                onClick={this.props.onClick}\r\n            >\r\n                <SortIcon />\r\n            </button>\r\n        );\r\n    }\r\n\r\n}\r\nfunction SortIcon() {\r\n  return (\r\n    <svg viewBox=\"0 0 384 512\">\r\n      <g>\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M379.29 132.69l-80-96a16 16 0 00-22.62 0l-80 96C186.65 142.74 193.78 160 208 160h48v304a16 16 0 0016 16h32a16 16 0 0016-16V160h48c14.19 0 21.36-17.24 11.29-27.31z\"\r\n          className=\"secondary\"\r\n        ></path>\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M176 352h-48V48a16 16 0 00-16-16H80a16 16 0 00-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0022.62 0l80-96C197.35 369.26 190.22 352 176 352z\"\r\n          className=\"primary\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\nexport default Sort;","import React, { Component } from 'react'\r\nimport Board from './board'\r\nimport './components.css'\r\nimport Sort from './sort'\r\n\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null),\r\n                    lastMove: Array(2).fill(null)\r\n                }\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            sortDesc: false,\r\n            showError: false\r\n        };\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        const winnerDeclared = Boolean(calculateWinner(squares));\r\n        const squareFilled = Boolean(squares[i]);\r\n        if (winnerDeclared || squareFilled) {\r\n            this.setState({\r\n                showError: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n        this.setState({\r\n            history: history.concat([\r\n                {\r\n                    squares,\r\n                    lastMove: calculateMovePosition(i)\r\n                }\r\n            ]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n    restart(){\r\n        this.setState({\r\n            history: [\r\n                {\r\n                    squares : [\r\n                        null, null, null,\r\n                        null, null, null,\r\n                        null, null, null,\r\n                    ] ,\r\n                    lastMove : [null, null]\r\n                }\r\n            ],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            sortDesc: false,\r\n            showError: false\r\n          })\r\n    }\r\n    jumpTo(step) {\r\n        const next = step % 2 === 0;\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: next\r\n        });\r\n    }\r\n    handleClickOnSorting(pos) {\r\n        this.setState({\r\n            sortDesc: !pos\r\n        });\r\n    }\r\n\r\n    hideShowError() {\r\n        this.setState({\r\n            showError: false\r\n        });\r\n    }\r\n    DescriptionAlerts() {\r\n        return (\r\n            <Alert severity=\"error\"\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            this.hideShowError()\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }>\r\n                <AlertTitle>Error: you should pick the empty squares!</AlertTitle>\r\n            </Alert>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        let Draw = isDraw(current.squares);\r\n\r\n        let status;\r\n        let line;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner.winner;\r\n            line = winner.line;\r\n            Draw = false;\r\n        } else if (Draw) {\r\n            status = \"Draw!\";\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n\r\n        const moves = history.map((moveArray, moveindex) => {\r\n            const lable = moveindex ? `Go to move #${moveindex}` : \"Go to game start\";\r\n            const colRowInfo = moveArray.lastMove[0]\r\n                ? `col:${moveArray.lastMove[0]}, row:${moveArray.lastMove[1]}`\r\n                : null;\r\n\r\n            return (\r\n                <li\r\n                    key={moveindex}\r\n                    className={moveindex === this.state.stepNumber ? \"active\" : null}\r\n                >\r\n                    <button onClick={() => this.jumpTo(moveindex)}>\r\n                        {lable}\r\n                        {colRowInfo ? <span>{colRowInfo}</span> : null}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n        if (this.state.sortDesc) {\r\n            moves.reverse();\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"game\">\r\n                    <Typography variant=\"headline\" className=\"Header\" align=\"center\">\r\n                        Tic Tac Toe\r\n                        <SportsEsportsIcon fontSize=\"inherit\" />\r\n                    </Typography>\r\n                    <Typography variant=\"headline\" className=\"Help\" align=\"center\">\r\n                        <Link style={{ fontSize: 20, color: \"white\" }} href=\"https://en.wikipedia.org/wiki/Tic-tac-toe\">\r\n                            How to play <LiveHelpIcon fontSize=\"inherit\" />\r\n                        </Link>\r\n                    </Typography>\r\n                    <Typography variant=\"headline\" align=\"center\">\r\n                        <Button\r\n                            style = {{marginTop : 20 , color: \"purple\" ,backgroundColor:\"white\"}}\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            endIcon={<RefreshIcon />}\r\n                            onClick={() => this.restart()}\r\n                        >\r\n                            Restart\r\n                        </Button>\r\n                    </Typography>\r\n                    <input id=\"sidebar-toggle\" type=\"checkbox\" />\r\n                    <div className=\"game-control\">\r\n                        <div>\r\n                            <span className=\"game-control-info\">{status}</span>\r\n                            <label htmlFor=\"sidebar-toggle\" className=\"more-button\">\r\n                                <span>moves</span>\r\n                                <span>close</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"game-board-wrapper\">\r\n                        <Board\r\n                            className={\"game-board\" + (Draw ? \" draw\" : \"\")}\r\n                            squares={current.squares}\r\n                            line={line}\r\n                            onClick={i => this.handleClick(i)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"game-sidebar\">\r\n                        <div className=\"game-sidebar-status\">\r\n                            {status}\r\n                            <Sort\r\n                                position={this.state.sortDesc}\r\n                                onClick={() => this.handleClickOnSorting(this.state.sortDesc)}\r\n                            />\r\n                        </div>\r\n                        <ul>{moves}</ul>\r\n                    </div>\r\n                    {this.state.showError ? <div>{this.DescriptionAlerts()}</div> : null}\r\n\r\n                </div>\r\n                <footer className=\"footer\">\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography variant=\"body1\">All Rights Reserved</Typography>\r\n                        <Copyright />\r\n                    </Container>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction isDraw(squares) {\r\n    const nullFinder = squares.filter(x => x === null);\r\n    return nullFinder.length === 0;\r\n}\r\nfunction calculateMovePosition(i) {\r\n    const row = Math.floor(i / 3) + 1;\r\n    const col = (i % 3) + 1;\r\n    return [row, col];\r\n}\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return {\r\n                winner: squares[a],\r\n                line: lines[i]\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            {' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n            <Link color=\"inherit\" href=\"https://github.com/negin-shahani/Tic-Tac-Toe-React\">\r\n                You can find my code in github  <GitHubIcon fontSize=\"inherit\" />\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\nexport default Game;","import './App.css';\nimport Game from './components/game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}